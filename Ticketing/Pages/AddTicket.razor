@page "/AddTicket"
@page "/AddTicket/{id}"
@using System.Net.Http.Json;
@inject NavigationManager navigationManager

@if (id == null)
{
    <h3>Add Ticket</h3>
}
else
{
    <h3>Update Ticket</h3>

}

<hr />

<form>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <input hidden @bind="@ticket.Id" />
            </div>
            <div class="form-group">
                <label for="subject" class="custom-control-label">Subject</label>
                <input form="subject" class="form-control" @bind="@ticket.Subject" />
            </div>
            <div class="form-group">
                <label for="TaskType" class="custom-control-label">Task Type</label>
                <EditForm Model="ticket">
                    <InputSelect @bind-Value="ticket.TicketType" class="form-control">
                        @foreach (var value in Enum.GetValues(typeof(SharedInfo.EnumTaskType)))
                        {
                            <option>@value</option>
                        }
                    </InputSelect>
                </EditForm>
            </div>
            <div class="form-group">
                <label for="subject" class="custom-control-label">Subject</label>
                <textarea form="subject" class="form-control" @bind="@ticket.Details" />
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-6">

            <div class="form-group">
                @if (id == null)
                {
                    <input type="button" class="btn btn-success" @onclick="@AddTicketInfo" value="Save" />
                }
                else
                {
                    <input type="button" class="btn btn-primary" @onclick="@UpdateTicketInfo" value="Update" />

                }
                <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel" />
            </div>

        </div>
    </div>
</form>

@code {

    [Parameter]
    public string id { get; set; }
    Ticket ticket = new Ticket();
    HttpClient http = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        if (id != null)
            ticket = await http.GetFromJsonAsync<Ticket>(SharedInfo.ServerIp + "api/Ticket/" + id);
    }

    protected async Task AddTicketInfo()
    {

        await http.PostAsJsonAsync(SharedInfo.ServerIp + "api/Ticket", ticket);

        navigationManager.NavigateTo("Tickets");
    }

    protected async Task UpdateTicketInfo()
    {

        await http.PutAsJsonAsync(SharedInfo.ServerIp + "api/Ticket/" + id, ticket);

        navigationManager.NavigateTo("Tickets");
    }


    void Cancel()
    {
        navigationManager.NavigateTo("Tickets");
    }
}
